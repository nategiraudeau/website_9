{"version":3,"sources":["components/SignIn.js","components/dashboard/SideBar.js","components/AlertsPanel.js","components/charts/LineChart.js","components/dashboard/PanelTwoAndThree.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js","artwork/logo_dark.png","artwork/user_icon-05.png"],"names":["later","delay","Promise","resolve","setTimeout","SignIn","state","toDashboard","transparent","e","preventDefault","this","setState","exact","to","style","opacity","transition","className","onSubmit","required","placeholder","type","value","onClick","Component","SideBar","expanded","expandButtonTransform","transform","src","logo","alt","href","transitionDelay","cursor","props","onLogOut","changeExpanded","AlertsPanel","close","open","width","data","labels","datasets","fill","backgroundColor","borderColor","hoverBorderDashOffset","options","legend","display","scales","yAxes","ticks","beginAtZero","Line","PanelTwoAndThree","height","flex","Dashboard","toSignIn","showAlerts","userIcon","data-primary","alignItems","class","closeAlerts","TransitionApp","withRouter","location","console","log","TransitionGroup","CSSTransition","key","classNames","timeout","path","App","basename","process","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.833c3ae6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../css/sign_in.css'\nimport { Redirect } from 'react-router-dom';\n\n// import { dbRoute } from '../App';\n\nfunction later(delay) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, delay);\n    });\n}\n\nexport default class SignIn extends Component {\n\n    state = {\n        toDashboard: false,\n        transparent: false,\n    }\n\n    async onSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            transparent: true,\n        });\n        await later(200);\n        this.setState({\n            transparent: false,\n            toDashboard: true,\n        });\n    }\n\n    render() {\n\n        if (this.state.toDashboard) {\n            this.setState({\n                toDashboard: false,\n            });\n            return (\n                <Redirect exact to='dashboard' />\n            )\n        }\n\n        return (\n            <div style={{\n                opacity: this.state.transparent ? 0 : 1,\n                transition: 'opacity 0.2s',\n            }} className=\"sign_in_form\">\n                <h1>Sign In</h1>\n                <form onSubmit={(e) => this.onSubmit(e)}>\n                    <input required placeholder=\"Email\" type=\"email\" />\n                    <input required placeholder=\"Password\" type=\"password\" />\n                    <input type=\"submit\" value=\"Sign In\" />\n                </form>\n                <button onClick={(e) => this.onSubmit(e)} className=\"skip-signin\">Skip</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport logo from '../../artwork/logo_dark.png';\nimport { Link } from 'react-router-dom';\n\nimport '../../css/side_bar.css';\n\nexport default class SideBar extends Component {\n\n    state = {\n        expanded: true,\n    }\n\n    changeExpanded() {\n        this.setState({\n            expanded: !this.state.expanded,\n        });\n    }\n\n    render() {\n\n        let expandButtonTransform = {\n            transform: `rotateY(${this.state.expanded ? 180 : 0}deg)`,\n        }\n\n        return (\n            <div>\n                <div className={`side_bar_push ${this.state.expanded ? 'expanded' : ''}`}>\n                </div>\n                <div className=\"side_bar_wrapper\">\n                    <div className={`side_bar ${this.state.expanded ? 'extended' : ''}`}>\n                        <div className=\"side_bar_content\">\n                            <div className=\"side_bar_logo\">\n                                <h1>Website</h1>\n                                <img src={logo} alt=\"The amazing website 9 logo\" />\n                            </div>\n                            <hr />\n\n                            { /* Links */}\n                            <a href=\"#\" className=\"side_bar_link\">\n                                <span className=\"material-icons\">dashboard</span>\n                                <p>Dashboard</p>\n                            </a>\n                            <a href=\"#\" className=\"side_bar_link\">\n                                <span className=\"material-icons\">attach_money</span>\n                                <p style={!this.state.expanded ? {} : { transitionDelay: '50ms' }}>Billing</p>\n                            </a>\n                            <a href=\"#\" className=\"side_bar_link\">\n                                <span className=\"material-icons\">person</span>\n                                <p style={!this.state.expanded ? {} : { transitionDelay: '100ms' }}>Account</p>\n                            </a>\n                            <a href=\"#\" className=\"side_bar_link\">\n                                <span className=\"material-icons\">settings</span>\n                                <p style={!this.state.expanded ? {} : { transitionDelay: '150ms' }}>Settings</p>\n                            </a>\n\n                            <hr />\n\n\n                            <div style={{ cursor: \"pointer\", }} onClick={() => this.props.onLogOut()} className=\"side_bar_link\">\n                                <span className=\"material-icons\">exit_to_app</span>\n                                <p style={!this.state.expanded ? {} : { transitionDelay: '200ms' }}>Log Out</p>\n                            </div>\n\n\n                            <div onClick={(e) => this.changeExpanded()} className=\"side_bar_expand\">\n                                <hr />\n                                <span className=\"material-icons\" style={{ ...expandButtonTransform }}>\n                                    arrow_forward_ios\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport '../css/alerts_panel.css';\n\nexport default class AlertsPanel extends Component {\n    render() {\n        return (\n            <div>\n                <div onClick={() => this.props.close()} className={`black_overlay ${this.props.open ? 'open' : ''}`}></div>\n                <div className={`alerts_panel ${this.props.open ? 'open' : ''}`}>\n                    <div className=\"row\">\n                        <h2>Alerts</h2>\n                        <div className=\"spacer\"></div>\n                        <span className=\"material-icons icon_button\">settings</span>\n                        <div style={{ width: '8px', }}></div>\n                        <span onClick={() => this.props.close()} className=\"material-icons icon_button\">close</span>\n                    </div>\n                    <hr />\n                    <div className=\"center\">\n                        <p>You Don't have any alerts</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { LineChart } from '@jhonnold/react-chart.js';\n\nconst data = {\n    labels: ['1', '2', '3', '4', '5', '6'],\n    datasets: [\n        {\n            data: [4, 8, 3, 5, 2, 3],\n            fill: false,\n            backgroundColor: '#ff1844',\n            borderColor: '#ff184461',\n            hoverBorderDashOffset: 1,\n        },\n    ],\n};\n\nconst options = {\n    legend: {\n        display: false\n    },\n    scales: {\n        yAxes: [\n            {\n                ticks: {\n                    beginAtZero: true,\n                },\n            },\n        ],\n    },\n};\n\nconst Line = () => (\n    <div className=\"chart\">\n        <LineChart data={data} options={options} />\n    </div>\n);\n\nexport default Line;","import React, { Component } from 'react'\nimport Line from '../charts/LineChart'\n\nimport '../../css/circular_progress.css';\n\nexport default class PanelTwoAndThree extends Component {\n    render() {\n        return (\n            <div className=\"row panel_2_3\">\n                <div className=\"panel p2\">\n                    <h3>Money</h3>\n                    <hr />\n                    <Line />\n                </div>\n                <div className=\"panel p3\">\n                    <div className=\"panel_column\">\n                        <div className=\"sub_panel blue_panel\">\n                            <div className=\"circle_progress\" style={{ width: \"160px\", height: \"160px\", transform: 'scale(0.8) rotate(20deg)', }}>\n                                <div className=\"circle_progress\">\n                                    <p>26%</p>\n                                </div>\n                            </div>\n                            <div style={{ height: '2px', }}></div>\n                            <h2>Progress</h2>\n                            <div style={{ height: '12px', }}></div>\n                        </div>\n                        <div style={{ flex: 50 + 'px' }}></div>\n                        <div className=\"sub_panel conversions\">\n                            <h4>Conversions<span className=\"number_indicator\">0</span></h4>\n                            <hr />\n                            <div>\n                                <div>\n                                    <p>Your most important events are conversions. Mark your top events as conversions to enable real-time uploads and attribution reporting.</p>\n                                    <div style={{ height: '8px', }}></div>\n                                    <a href=\"#\">Learn More</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport '../../css/dashboard.css';\nimport SideBar from './SideBar';\n// import { authRoute } from '../../App';\nimport { Redirect } from 'react-router-dom';\n\nimport userIcon from \"../../artwork/user_icon-05.png\";\nimport AlertsPanel from '../AlertsPanel';\nimport PanelTwoAndThree from './PanelTwoAndThree';\n\nfunction later(delay) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, delay);\n    });\n}\n\nexport default class Dashboard extends Component {\n\n    state = {\n        toSignIn: false,\n        transparent: false,\n        showAlerts: false,\n    }\n\n    showAlerts() {\n        this.setState({\n            showAlerts: true,\n        });\n    }\n\n    closeAlerts() {\n        this.setState({\n            showAlerts: false,\n        });\n    }\n\n    async onLogOut() {\n        this.setState({\n            transparent: true,\n        });\n        await later(200);\n        this.setState({\n            transparent: false,\n            toSignIn: true,\n        });\n    }\n\n    render() {\n\n        if (this.state.toSignIn) {\n            this.setState({\n                toSignIn: false,\n            });\n            return (\n                <Redirect exact to='/signin' />\n            )\n        }\n\n        return (\n            <div style={{\n                opacity: this.state.transparent ? 0 : 1,\n                transition: 'opacity 0.2s',\n            }} className=\"dashboard\">\n                <SideBar onLogOut={() => this.onLogOut()} />\n                <div className=\"page_main\">\n                    <div className=\"panel p1\">\n                        <h1>Dashboard</h1>\n                        <div className=\"spacer\"></div>\n                        <div className=\"icons\">\n                            <span onClick={() => this.showAlerts()} className=\"material-icons icon_button\">notifications</span>\n                            <div className=\"user_icon\">\n                                <img src={userIcon} alt=\"A user Icon\" />\n                            </div>\n                        </div>\n                    </div>\n                    <PanelTwoAndThree />\n                    <div className=\"row panel_4_5\">\n                        <div className=\"panel p4\">\n                            <h2 className=\"panel_title\">Insights</h2>\n                            <hr />\n                            <div className=\"center\">\n                                <div>\n                                    <b>Your Insights will appear here soon.</b>\n                                    <p>In the meantime, you can create new custom insights to monitor your most important metrics. <a href=\"#\">Learn more</a></p>\n                                    <a data-primary href=\"#\" className=\"btn\">Create</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"panel p5\">\n                            <div className=\"row\" style={{ alignItems: \"center\", }}>\n                                <h2 className=\"panel_title\">Schedule</h2>\n                                <div className=\"spacer\"></div>\n                                <span class=\"material-icons icon_button\">add</span>\n                            </div>\n                            <hr />\n                            <table style={{ width: '100%', }}>\n                                <tr>\n                                    <th>Event</th>\n                                    <th>Date</th>\n                                    <th>Time</th>\n                                </tr>\n                                <tr>\n                                    <td>Go to the store</td>\n                                    <td>Tuesday</td>\n                                    <td>8:30 AM</td>\n                                </tr>\n                                <tr>\n                                    <td>Do something</td>\n                                    <td>Friday</td>\n                                    <td>12:00 PM</td>\n                                </tr>\n                                <tr>\n                                    <td>Mow the lawn</td>\n                                    <td>Sunday</td>\n                                    <td>3:00 PM</td>\n                                </tr>\n                                <tr>\n                                    <td>Wake up</td>\n                                    <td>Monday, October 11</td>\n                                    <td>5:30 AM</td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <AlertsPanel close={() => this.closeAlerts()} open={this.state.showAlerts} />\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './css/App.css';\nimport {\n  TransitionGroup,\n  CSSTransition\n} from \"react-transition-group\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  withRouter,\n} from \"react-router-dom\";\nimport SignIn from './components/SignIn';\nimport Dashboard from './components/dashboard/Dashboard';\n\nfunction createPath(path) {\n  return process.env.PUBLIC_URL + path;\n}\n\nconst TransitionApp = withRouter(({ location }) => {\n  console.log(location);\n  return (<TransitionGroup>\n    <CSSTransition key={location.key} classNames=\"fade\" timeout={0}>\n      <Switch location={location}>\n        <Route exact path='/'>\n          <Redirect to=\"/signin\" />\n        </Route>\n        <Route path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </CSSTransition>\n  </TransitionGroup>);\n});\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/signin\" />\n          </Route>\n          <Route path=\"*\">\n            <TransitionApp />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_dark.8ec1824f.png\";","module.exports = __webpack_public_path__ + \"static/media/user_icon-05.374a55a0.png\";"],"sourceRoot":""}